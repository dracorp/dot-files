# vim: set ft=gitconfig:
[alias]
	alias = config --get-regexp ^alias\\.

	rv = !git remote -v
	ro = !git-remote-open

	au  = add -u
	aa = add --all :/
	ap = add -u -p

	b  = browse
	br = branch

	ci = commit
	amend = commit --amend --no-edit

	co = checkout

	cl = clone

	d  = diff
	df = diff
	dc = diff --cached
	ds = diff --staged
	dw = diff --color-words
	changes=diff --name-status -r
	diffstat=diff --stat -r

	who = shortlog -s --
	gitkconflict = !gitk --left-right HEAD...MERGE_HEAD

	unstage = reset HEAD --
	try = merge --no-commit --no-ff
	changed = diff-tree -r --no-commit-id --name-only

	# logs
	l = log --pretty='format:%C(yellow)%h %C(blue)%ad %C(reset)%s%C(red)%d %C(green)%an%C(reset), %C(cyan)%ar' --date=short
	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg3 = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lg4 = log --graph --pretty="\"%h %d %s\"" --decorate=full --tags
	lg5 = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lg = !"git lg2"
	lp = log -p
	last = log -1 HEAD
	llog = log --date=local
	files = log --name-only

	# show number of commits
	wc = rev-list HEAD --count
	count = rev-list HEAD --count

	# ssp = stash show -p
	# sl = stash list

	# pull and update submodules
	pull-modules = !git pull && git submodule update --init --recursive --depth 1
	pull-all-branches = "!f(){ git branch --format='%(refname:short)' | xargs -I {} sh -c 'git checkout {}# git pull'; }; f"

	s  = status -s -b
	st = status

	sc = diff --name-only --diff-filter=U
	sm = submodule
	smu = submodule foreach git pull origin master

	w  = whatchanged --decorate
	wp = whatchanged --decorate -p
	wtf = "!git fetch --multiple production origin && git log production/master..origin/master"
	diff-image = "!f() { cd -- \"${GIT_PREFIX:-.}\"# GIT_DIFF_IMAGE_ENABLED=1 git diff \"$@\"; }; f"
	commitall = "!f(){ git add . && git commit -aqm \"$1\" && git push -q# }; f"

    # pull = pull --rebase
	g = "!f() { git grep -i \"$1\" $(git for-each-ref --format='%(refname)' refs/)# }; f"
	grep-refs = !sh -c 'git grep "$0" "$@" "$(git for-each-ref --format=\"%(refname)\"" refs/)'

	delete-local-merged = "!git fetch && git branch --merged | egrep -v 'master|cloud|develop' | xargs git branch -d"
	pfetch = fetch --prune
	about = "!describe() { msg=\"$1\"# git config branch.\"$(git rev-parse --abbrev-ref HEAD)\".description ${msg:+\"$msg\"} || true;  }; describe"

